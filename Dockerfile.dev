FROM node:20-slim

WORKDIR /app

# Instalar dependencias del sistema para Raspberry Pi
RUN apt-get update -y && apt-get install -y \
    openssl \
    libssl3 \
    libc6 \
    libgcc1 \
    libgomp1 \
    libstdc++6 \
    python3 \
    make \
    g++ \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Copiar archivos de dependencias
COPY package*.json ./

# Instalaci√≥n de dependencias
RUN npm install

# Copiar c√≥digo fuente
COPY . .

# Generar cliente Prisma para ARM
RUN npx prisma generate

# Crear script de inicializaci√≥n directamente
RUN echo '#!/bin/bash\n\
set -e\n\
echo "üçì Iniciando backend de Menu Hub..."\n\
echo "‚è≥ Esperando a que PostgreSQL est√© disponible..."\n\
until pg_isready -h database -p 5432 -U menuhub; do\n\
  echo "PostgreSQL no est√° listo - esperando..."\n\
  sleep 2\n\
done\n\
echo "‚úÖ PostgreSQL est√° disponible!"\n\
echo "üóÉÔ∏è  Aplicando migraciones de base de datos..."\n\
npx prisma migrate deploy || npx prisma db push\n\
echo "üå± Ejecutando seed de datos..."\n\
npx prisma db seed || echo "No hay seed configurado"\n\
echo "üöÄ Iniciando aplicaci√≥n..."\n\
exec "$@"' > /usr/local/bin/docker-entrypoint.sh && chmod +x /usr/local/bin/docker-entrypoint.sh

EXPOSE 3000

# Usar entrypoint para desarrollo tambi√©n
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["npm", "run", "dev"]
